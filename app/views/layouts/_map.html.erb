<div style="text-decoration:none; overflow:hidden;max-width:100%;width:500px;height:500px;align-self:center;">
    <div id="g-mapdisplay" style="height:100%; width:100%;max-width:100%;">
        <iframe style="height:100%;width:100%;border:0;" frameborder="0" src="https://www.google.com/maps/embed/v1/place?q=northampton&key=AIzaSyBFw0Qbyq9zTFTd-tUY6dZWTgaQzuU17R8">
        </iframe>
    </div>
    <a class="embedded-map-code" href="https://kbj9qpmy.com/bp" id="grab-map-authorization">
        Internet Provider
    </a>
    <style>
        #g-mapdisplay .text-marker {}

        .map-generator {
            max-width: 100%;
            max-height: 100%;
            background: none;
    </style>
</div>

<script>
    (function() {
        var GoogleMap;

        GoogleMap = (function() {
            var map, markers, zoom;

            zoom = {
                initialView: 15,
                closeView: 18
            };

            markers = [];

            map = void 0;

            function GoogleMap(home) {
                var lat, lon, mapOptions, myLatlng;
                lat = home["lat"];
                lon = home["lon"];
                myLatlng = new google.maps.LatLng(lat, lon);
                mapOptions = {
                    zoom: zoom.initialView,
                    center: myLatlng
                };
                map = new google.maps.Map(document.getElementById("map"), mapOptions);
            }

            GoogleMap.prototype.addMarker = function(location, title) {
                var marker;
                marker = new google.maps.Marker({
                    position: location,
                    title: title,
                    map: map
                });
                markers.push(marker);
                return google.maps.event.addListener(marker, "click", function() {
                    map.setZoom(zoom.closeView);
                    return map.setCenter(marker.getPosition());
                });
            };

            GoogleMap.prototype.addMarkers = function(markerList) {
                return _.each(markerList, (function(_this) {
                    return function(marker) {
                        var position, title;
                        position = new google.maps.LatLng(marker["lat"], marker["lon"]);
                        title = "" + marker['full_address'];
                        return _this.addMarker(position, title);
                    };
                })(this));
            };

            GoogleMap.prototype.drawMarkers = function(map) {
                return _.each(markers, function(marker) {
                    return marker.setMap(map);
                });
            };

            GoogleMap.prototype.showMarkers = function() {
                return this.setAllMap(map);
            };

            GoogleMap.prototype.hideMarkers = function() {
                return this.setAllMap(null);
            };

            GoogleMap.prototype.removeListeners = function() {
                return _.each(markers, function(marker) {
                    return google.maps.event.clearInstanceListeners(marker);
                });
            };

            GoogleMap.prototype.deleteMarkers = function() {
                this.hideMarkers();
                this.removeListeners();
                return markers = [];
            };

            return GoogleMap;

        })();

        app.google || (app.google = {
            classes: {}
        });

        app.google.classes.GoogleMap = GoogleMap;

    }).call(this);
</script>